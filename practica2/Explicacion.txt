-AES 

    Este metodo de cifrado, usa un clave privada de 16, 24 o 32 bytes random, para aplicar su algoritmo
    y cifrar el texto.

    Visual:

    Texto_cifrado = Cifrado(AES(Clave), Texto_Plano)


- AES con ECB

    Para cifrar con ECB, unicamente necesitamos la clave, que son 16, 24 o 32 random. Esta clave se usa 
    para cifrar y descifrar como ocurre en AES basico.

    ¿Como funciona?

    Cogemos el texto y lo dividimos en bloques de 16 bytes, si el tamaño del texto no es multiplo de 16
    añadimos al ultimo los bytes restantes con el padding, y a cada bloque lo ciframos usando AES.

    Visual:

    Texto_Cifrado = Cifrado(AES(Clave),1_Bloque_16Bytes_Texto_Plano) +  Cifrado(AES(Clave),2_Bloque_16Bytes_Texto_Plano) + ...

    Diferencia entre el base:
        Es mas seguro que el normal, puesto que en vez de cifrar una sola vez todo el texto con AES,
        lo hacemos en bloques de 16. No es mucho mas seguro que el base, puesto que si dos bloques
        son exactamente iguales, el AES devolvera exactamente el mismo cifrado, para esos dos bloques.



- AES con CBC:

    Para cifrar con CBC, requeriremos un IV, el cual son 16 bytes random y una clave que son 16, 24 o 32 bytes, segun se escoja
    (como ocurre en AES simple), que junto al IV y la clave generaremos el cipher, el cual es el encargado de cifrar el texto.

    ¿Como funciona?

    Cogemos el iv y aplicamos la operacion XOR con los primeros 16 bytes del texto, y al resultado de
    esa operacion, le aplicaremos el AES para cifrarlo, de esta forma tenemos los primeros 16 bytes 
    cifrados, para el segundo bloque realizamos el mismo bloque, con la diferencia de que en vez
    de usar el IV y el segundo bloque, usaremos el primer bloque en vez del IV, y asi sucesivamente hasta 
    terminar todos los bloques. En caso de que el texto no sea multiplo de 16, usamos el padding para
    no dejar un bloque suelto.

    Visual:

    Texto_Cifrado_1 = Cifrado(AES(Clave),XOR(IV, 1_Bloque_16Bytes_Texto_Plano))
    Texto_Cifrado_2 = Cifrado(AES(Clave),XOR(IV, Texto_Cifrado_1))
    Texto_Cifrado_3 = Cifrado(AES(Clave),XOR(IV, Texto_Cifrado_2))
    ...
    Texto_Cifrado = Texto_Cifrado_1 + Texto_Cifrado_2 + Texto_Cifrado_3 + ...

    Para cifrar y descifrar, es necesario usar la misma IV y clave, pero solo se hace privada, generalmente,
    la clave, mientras que la IV, se hace publica, añadiendola en el texto cifrado. Esto se debe a que 
    el IV es secillo de obtener mediante patrones, y es mas sencillo el ponerlo al inicio para que el 
    receptor pueda obtenerlo facilmente.

    Diferencia entre el base:

        Es mas seguro que el AES normal, puesto que vamos cifrando por bloques y para poder descifrar un bloque
        antes necesitamos descifrar el anterior, lo cual hace que la seguridad del CBC sea mucho mayor.



-AES con OFB:
    
    Para cifrar con CBC, requeriremos un IV, el cual son 16 bytes random y una clave que son 16, 24 o 32 bytes, segun se escoja
    (como ocurre en AES simple), que junto al IV y la clave generaremos el cipher, el cual es el encargado de cifrar el texto.

    ¿Como funciona?

    Cogemos el IV, y lo ciframos usando AES, que nos dara un resultado que llamaremos salida1, con dicha 
    salida1, haremos el XOR con el primer bloque de 16 bytes del texto para obtener la primera parte cifrada,
    para la segunda, cifraremos usando AES la salida1, dandonos salida2, con la cual hacemos el XOR con el
    segundo bloque y asi sucesivamente. En esencia, iremos aplicando AES al IV y sus resultados, y el numero
    de veces que hemos usado AES, es el bloque de texto que corresponde.

    Visual:

    Salida_1 = Cifrado(AES(clave), IV)
    Texto_Cifrado_1 = XOR(Salida_1, 1_Bloque_16Bytes_Texto_Plano)
    Salida_2 = Cifrado(AES(clave), Salida_1)
    Texto_Cifrado_2 = XOR(Salida_2, 2_Bloque_16Bytes_Texto_Plano)
    ...
    Texto_Cifrado = Texto_Cifrado_1 + Texto_Cifrado_2 + ...

    Diferencia entre el base:
        Este tipo de cifrado, es mucho mas seguro, puesto que se realizan varias cifraciones RSA, sobre
        el IV y sus salidas, de una manera muy similar al CBC. La diferencia entre este ultimo, es que
        este no requerire descifrar el bloque anterior para poder descifrar un bloque. 
        Este metodo sacrifica un poco de seguridad, no demasiada, a costa de ser mucho mas eficiente
        en la implementación, puesto que los bloques pueden cifrarse de forma simatrica.  

